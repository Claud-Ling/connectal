char charMap(char in){
  switch( in ) {
    case 0: return 0;
    case 1: return 0;
    case 2: return 0;
    case 3: return 0;
    case 4: return 0;
    case 5: return 0;
    case 6: return 0;
    case 7: return 0;
    case 8: return 0;
    case 9: return 3;
    case 10: return 5;
    case 11: return 3;
    case 12: return 3;
    case 13: return 4;
    case 14: return 0;
    case 15: return 0;
    case 16: return 0;
    case 17: return 0;
    case 18: return 0;
    case 19: return 0;
    case 20: return 0;
    case 21: return 0;
    case 22: return 0;
    case 23: return 0;
    case 24: return 0;
    case 25: return 0;
    case 26: return 0;
    case 27: return 0;
    case 28: return 0;
    case 29: return 0;
    case 30: return 0;
    case 31: return 0;
    case 32: return 3;
    case 33: return 3;
    case 34: return 3;
    case 35: return 3;
    case 36: return 3;
    case 37: return 3;
    case 38: return 3;
    case 39: return 3;
    case 40: return 3;
    case 41: return 3;
    case 42: return 3;
    case 43: return 3;
    case 44: return 3;
    case 45: return 3;
    case 46: return 3;
    case 47: return 3;
    case 48: return 2;
    case 49: return 11;
    case 50: return 1;
    case 51: return 10;
    case 52: return 3;
    case 53: return 3;
    case 54: return 3;
    case 55: return 3;
    case 56: return 3;
    case 57: return 3;
    case 58: return 3;
    case 59: return 3;
    case 60: return 3;
    case 61: return 3;
    case 62: return 3;
    case 63: return 3;
    case 64: return 3;
    case 65: return 3;
    case 66: return 3;
    case 67: return 3;
    case 68: return 3;
    case 69: return 8;
    case 70: return 3;
    case 71: return 3;
    case 72: return 3;
    case 73: return 3;
    case 74: return 3;
    case 75: return 3;
    case 76: return 3;
    case 77: return 3;
    case 78: return 3;
    case 79: return 3;
    case 80: return 3;
    case 81: return 3;
    case 82: return 9;
    case 83: return 7;
    case 84: return 3;
    case 85: return 6;
    case 86: return 3;
    case 87: return 3;
    case 88: return 3;
    case 89: return 3;
    case 90: return 3;
    case 91: return 3;
    case 92: return 3;
    case 93: return 3;
    case 94: return 3;
    case 95: return 3;
    case 96: return 3;
    case 97: return 3;
    case 98: return 3;
    case 99: return 3;
    case 100: return 3;
    case 101: return 3;
    case 102: return 3;
    case 103: return 3;
    case 104: return 3;
    case 105: return 3;
    case 106: return 3;
    case 107: return 3;
    case 108: return 3;
    case 109: return 3;
    case 110: return 3;
    case 111: return 3;
    case 112: return 3;
    case 113: return 3;
    case 114: return 3;
    case 115: return 3;
    case 116: return 3;
    case 117: return 3;
    case 118: return 3;
    case 119: return 3;
    case 120: return 3;
    case 121: return 3;
    case 122: return 3;
    case 123: return 3;
    case 124: return 3;
    case 125: return 3;
    case 126: return 3;
    case 127: return 0;
    case -128: return 0;
    case -127: return 0;
    case -126: return 0;
    case -125: return 0;
    case -124: return 0;
    case -123: return 0;
    case -122: return 0;
    case -121: return 0;
    case -120: return 0;
    case -119: return 0;
    case -118: return 0;
    case -117: return 0;
    case -116: return 0;
    case -115: return 0;
    case -114: return 0;
    case -113: return 0;
    case -112: return 0;
    case -111: return 0;
    case -110: return 0;
    case -109: return 0;
    case -108: return 0;
    case -107: return 0;
    case -106: return 0;
    case -105: return 0;
    case -104: return 0;
    case -103: return 0;
    case -102: return 0;
    case -101: return 0;
    case -100: return 0;
    case -99: return 0;
    case -98: return 0;
    case -97: return 0;
    case -96: return 0;
    case -95: return 0;
    case -94: return 0;
    case -93: return 0;
    case -92: return 0;
    case -91: return 0;
    case -90: return 0;
    case -89: return 0;
    case -88: return 0;
    case -87: return 0;
    case -86: return 0;
    case -85: return 0;
    case -84: return 0;
    case -83: return 0;
    case -82: return 0;
    case -81: return 0;
    case -80: return 0;
    case -79: return 0;
    case -78: return 0;
    case -77: return 0;
    case -76: return 0;
    case -75: return 0;
    case -74: return 0;
    case -73: return 0;
    case -72: return 0;
    case -71: return 0;
    case -70: return 0;
    case -69: return 0;
    case -68: return 0;
    case -67: return 0;
    case -66: return 0;
    case -65: return 0;
    case -64: return 0;
    case -63: return 0;
    case -62: return 0;
    case -61: return 0;
    case -60: return 0;
    case -59: return 0;
    case -58: return 0;
    case -57: return 0;
    case -56: return 0;
    case -55: return 0;
    case -54: return 0;
    case -53: return 0;
    case -52: return 0;
    case -51: return 0;
    case -50: return 0;
    case -49: return 0;
    case -48: return 0;
    case -47: return 0;
    case -46: return 0;
    case -45: return 0;
    case -44: return 0;
    case -43: return 0;
    case -42: return 0;
    case -41: return 0;
    case -40: return 0;
    case -39: return 0;
    case -38: return 0;
    case -37: return 0;
    case -36: return 0;
    case -35: return 0;
    case -34: return 0;
    case -33: return 0;
    case -32: return 0;
    case -31: return 0;
    case -30: return 0;
    case -29: return 0;
    case -28: return 0;
    case -27: return 0;
    case -26: return 0;
    case -25: return 0;
    case -24: return 0;
    case -23: return 0;
    case -22: return 0;
    case -21: return 0;
    case -20: return 0;
    case -19: return 0;
    case -18: return 0;
    case -17: return 0;
    case -16: return 0;
    case -15: return 0;
    case -14: return 0;
    case -13: return 0;
    case -12: return 0;
    case -11: return 0;
    case -10: return 0;
    case -9: return 0;
    case -8: return 0;
    case -7: return 0;
    case -6: return 0;
    case -5: return 0;
    case -4: return 0;
    case -3: return 0;
    case -2: return 0;
    case -1: return 0;
    default: return 0;
  }
}

REGEX_STATE stateMap(REGEX_STATE in){
  switch( in ){
    case 0: return 0;
    case 1: return 1;
    case 2: return 2;
    case 3: return 3;
    case 4: return 4;
    case 5: return 5;
    case 6: return 6;
    case 7: return 7;
    case 8: return 8;
    case 9: return 9;
    case 10: return 10;
    case 11: return 11;
    case 12: return 12;
    case 13: return 2;
    case 14: return 2;
    case 15: return 13;
    case 16: return 14;
    case 17: return 15;
    case 18: return 16;
    case 19: return 17;
    default: return 0;
  }
}

bool acceptStates(REGEX_STATE in){
  switch( in ){
    case 0: return false;
    case 1: return true;
    case 2: return true;
    case 3: return false;
    case 4: return false;
    case 5: return false;
    case 6: return false;
    case 7: return false;
    case 8: return false;
    case 9: return false;
    case 10: return false;
    case 11: return false;
    case 12: return false;
    case 13: return false;
    case 14: return false;
    case 15: return false;
    case 16: return false;
    case 17: return false;
    case 18: return false;
    case 19: return false;
    default: return false;
  }
}

REGEX_STATE stateTransition(REGEX_STATE mappedState, char mappedIn){
  switch( mappedState ){
    case 0: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 3;
      case 2: return 0;
      case 3: return 0;
      case 4: return 0;
      case 5: return 0;
      case 6: return 0;
      case 7: return 0;
      case 8: return 0;
      case 9: return 0;
      case 10: return 0;
      case 11: return 0;
      case 12: return 1;
      default: return 0;
    }
    case 1: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 0;
      case 2: return 0;
      case 3: return 0;
      case 4: return 0;
      case 5: return 0;
      case 6: return 0;
      case 7: return 0;
      case 8: return 0;
      case 9: return 0;
      case 10: return 0;
      case 11: return 0;
      case 12: return 0;
      default: return 0;
    }
    case 2: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 14;
      case 8: return 14;
      case 9: return 14;
      case 10: return 14;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 3: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 4;
      case 2: return 0;
      case 3: return 0;
      case 4: return 0;
      case 5: return 0;
      case 6: return 0;
      case 7: return 0;
      case 8: return 0;
      case 9: return 0;
      case 10: return 0;
      case 11: return 0;
      case 12: return 0;
      default: return 0;
    }
    case 4: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 0;
      case 2: return 5;
      case 3: return 0;
      case 4: return 0;
      case 5: return 0;
      case 6: return 0;
      case 7: return 0;
      case 8: return 0;
      case 9: return 0;
      case 10: return 0;
      case 11: return 0;
      case 12: return 0;
      default: return 0;
    }
    case 5: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 5;
      case 6: return 5;
      case 7: return 5;
      case 8: return 5;
      case 9: return 5;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    case 6: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 14;
      case 8: return 14;
      case 9: return 14;
      case 10: return 14;
      case 11: return 2;
      case 12: return 0;
      default: return 0;
    }
    case 7: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 14;
      case 8: return 14;
      case 9: return 14;
      case 10: return 6;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 8: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 10;
      case 7: return 14;
      case 8: return 14;
      case 9: return 14;
      case 10: return 7;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 9: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 8;
      case 6: return 14;
      case 7: return 14;
      case 8: return 14;
      case 9: return 14;
      case 10: return 14;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 10: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 11;
      case 8: return 14;
      case 9: return 14;
      case 10: return 14;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 11: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 14;
      case 8: return 12;
      case 9: return 14;
      case 10: return 14;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 12: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 14;
      case 2: return 14;
      case 3: return 14;
      case 4: return 9;
      case 5: return 14;
      case 6: return 14;
      case 7: return 14;
      case 8: return 14;
      case 9: return 13;
      case 10: return 14;
      case 11: return 14;
      case 12: return 0;
      default: return 0;
    }
    case 13: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 5;
      case 6: return 5;
      case 7: return 5;
      case 8: return 5;
      case 9: return 14;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    case 14: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 5;
      case 6: return 5;
      case 7: return 5;
      case 8: return 15;
      case 9: return 5;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    case 15: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 5;
      case 6: return 5;
      case 7: return 16;
      case 8: return 5;
      case 9: return 5;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    case 16: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 5;
      case 6: return 17;
      case 7: return 5;
      case 8: return 5;
      case 9: return 5;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    case 17: switch ( mappedIn ) {
      case 0: return 0;
      case 1: return 5;
      case 2: return 5;
      case 3: return 5;
      case 4: return 19;
      case 5: return 18;
      case 6: return 5;
      case 7: return 5;
      case 8: return 5;
      case 9: return 5;
      case 10: return 5;
      case 11: return 5;
      case 12: return 0;
      default: return 0;
    }
    default: return 0;
  }
}

int numStates = 20;
int numChars  = 13;


