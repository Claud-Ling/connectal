BEGIN axi_passthrough

OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = BUS
OPTION BUS_STD = AXIPT
OPTION STYLE = HDL
OPTION HDL = MIXED
OPTION MAX_MASTERS = 16
OPTION MAX_SLAVES = 16
OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
OPTION DESC = AXI Interconnect
OPTION ARCH_SUPPORT_MAP = (spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION, virtex7=PRODUCTION, kintex7=PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRODUCTION, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION, aartix7=PRE_PRODUCTION, artix7l=PRE_PRODUCTION, virtex7ht=PRE_PRODUCTION, qvirtex7=PRE_PRODUCTION, qkintex7=PRE_PRODUCTION, qkintex7l=PRE_PRODUCTION, qartix7=PRE_PRODUCTION, qartix7l=PRE_PRODUCTION, azynq=PRE_PRODUCTION, qzynq=PRE_PRODUCTION, qvirtex7l=PRE_PRODUCTION)

BUS_INTERFACE BUS = AXISLAVE, BUS_TYPE = SLAVE, BUS_STD = AXIPT
BUS_INTERFACE BUS = AXIMASTER, BUS_TYPE = SLAVE, BUS_STD = AXIPT

PARAMETER C_NUM_SLAVE_SLOTS = 1, DT = INTEGER, RANGE = (1 : 16), ASSIGNMENT = UPDATE
PARAMETER C_NUM_MASTER_SLOTS = 1, DT = INTEGER, RANGE = (1 : 16), ASSIGNMENT = UPDATE
PARAMETER C_AXI_ID_WIDTH = 1, DT = INTEGER, RANGE = (1 : 16), ASSIGNMENT = UPDATE
PARAMETER C_AXI_ADDR_WIDTH = 32, DT = INTEGER, RANGE = (32), ASSIGNMENT = UPDATE
PARAMETER C_AXI_DATA_MAX_WIDTH = 32, DT = INTEGER, ASSIGNMENT = UPDATE, RANGE = (32, 64, 128, 256, 512, 1024)
PARAMETER C_INTERCONNECT_CONNECTIVITY_MODE = 1, DT = INTEGER, RANGE = (0,1), VALUES = (0= Shared Access (Area optimized) , 1= Crossbar (Performance optimized) ), DESC = Interconnect Architecture

PORT INTERCONNECT_ACLK = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT INTERCONNECT_ARESETN = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESET_OUT_N = ARESETN, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], SIGIS = RST
PORT M_AXI_ARESET_OUT_N = ARESETN, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], SIGIS = RST, BUS = AXIMASTER
PORT S_AXI_ACLK = ACLK, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], SIGIS = CLK, BUS = AXISLAVE
PORT S_AXI_AWID = AWID, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXISLAVE
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ADDR_WIDTH)-1):0], CONTRIBUTION = C_AXI_ADDR_WIDTH, BUS = AXISLAVE
PORT S_AXI_AWLEN = AWLEN, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*8)-1):0], CONTRIBUTION = 8, BUS = AXISLAVE
PORT S_AXI_AWSIZE = AWSIZE, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXISLAVE
PORT S_AXI_AWBURST = AWBURST, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_AWLOCK = AWLOCK, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_AWCACHE = AWCACHE, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXISLAVE
PORT S_AXI_AWPROT = AWPROT, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXISLAVE
PORT S_AXI_AWQOS = AWQOS, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXISLAVE
PORT S_AXI_AWVALID = AWVALID, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_AWREADY = AWREADY, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_WID = WID, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXISLAVE
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_DATA_MAX_WIDTH)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH, BUS = AXISLAVE
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [(((C_NUM_SLAVE_SLOTS*C_AXI_DATA_MAX_WIDTH)/8)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH/8, BUS = AXISLAVE
PORT S_AXI_WLAST = WLAST, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_WVALID = WVALID, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_WREADY = WREADY, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_BID = BID, DIR = O, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXISLAVE
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_BVALID = BVALID, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_BREADY = BREADY, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_ARID = ARID, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXISLAVE
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ADDR_WIDTH)-1):0], CONTRIBUTION = C_AXI_ADDR_WIDTH, BUS = AXISLAVE
PORT S_AXI_ARLEN = ARLEN, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*8)-1):0], CONTRIBUTION = 8, BUS = AXISLAVE
PORT S_AXI_ARSIZE = ARSIZE, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXISLAVE
PORT S_AXI_ARBURST = ARBURST, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_ARLOCK = ARLOCK, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_ARCACHE = ARCACHE, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXISLAVE
PORT S_AXI_ARPROT = ARPROT, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXISLAVE
PORT S_AXI_ARQOS = ARQOS, DIR = I, VEC = [((C_NUM_SLAVE_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXISLAVE
PORT S_AXI_ARVALID = ARVALID, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_ARREADY = ARREADY, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_RID = RID, DIR = O, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXISLAVE
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [((C_NUM_SLAVE_SLOTS*C_AXI_DATA_MAX_WIDTH)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH, BUS = AXISLAVE
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [((C_NUM_SLAVE_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXISLAVE
PORT S_AXI_RLAST = RLAST, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_RVALID = RVALID, DIR = O, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT S_AXI_RREADY = RREADY, DIR = I, VEC = [(C_NUM_SLAVE_SLOTS-1):0], BUS = AXISLAVE
PORT M_AXI_ACLK = ACLK, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], SIGIS = CLK, BUS = AXIMASTER
PORT M_AXI_AWID = AWID, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXIMASTER
PORT M_AXI_AWADDR = AWADDR, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ADDR_WIDTH)-1):0], CONTRIBUTION = C_AXI_ADDR_WIDTH, BUS = AXIMASTER
PORT M_AXI_AWLEN = AWLEN, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*8)-1):0], CONTRIBUTION = 8, BUS = AXIMASTER
PORT M_AXI_AWSIZE = AWSIZE, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXIMASTER
PORT M_AXI_AWBURST = AWBURST, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_AWLOCK = AWLOCK, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_AWCACHE = AWCACHE, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXIMASTER
PORT M_AXI_AWPROT = AWPROT, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXIMASTER
PORT M_AXI_AWQOS = AWQOS, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXIMASTER
PORT M_AXI_AWVALID = AWVALID, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_AWREADY = AWREADY, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_WID = WID, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXIMASTER
PORT M_AXI_WDATA = WDATA, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_DATA_MAX_WIDTH)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH, BUS = AXIMASTER
PORT M_AXI_WSTRB = WSTRB, DIR = O, VEC = [(((C_NUM_MASTER_SLOTS*C_AXI_DATA_MAX_WIDTH)/8)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH/8, BUS = AXIMASTER
PORT M_AXI_WLAST = WLAST, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_WVALID = WVALID, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_WREADY = WREADY, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_BID = BID, DIR = I, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXIMASTER
PORT M_AXI_BRESP = BRESP, DIR = I, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_BVALID = BVALID, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_BREADY = BREADY, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_ARID = ARID, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXIMASTER
PORT M_AXI_ARADDR = ARADDR, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ADDR_WIDTH)-1):0], CONTRIBUTION = C_AXI_ADDR_WIDTH, BUS = AXIMASTER
PORT M_AXI_ARLEN = ARLEN, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*8)-1):0], CONTRIBUTION = 8, BUS = AXIMASTER
PORT M_AXI_ARSIZE = ARSIZE, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXIMASTER
PORT M_AXI_ARBURST = ARBURST, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_ARLOCK = ARLOCK, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_ARCACHE = ARCACHE, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXIMASTER
PORT M_AXI_ARPROT = ARPROT, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*3)-1):0], CONTRIBUTION = 3, BUS = AXIMASTER
PORT M_AXI_ARQOS = ARQOS, DIR = O, VEC = [((C_NUM_MASTER_SLOTS*4)-1):0], CONTRIBUTION = 4, BUS = AXIMASTER
PORT M_AXI_ARVALID = ARVALID, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_ARREADY = ARREADY, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_RID = RID, DIR = I, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_ID_WIDTH)-1):0], CONTRIBUTION = C_AXI_ID_WIDTH, BUS = AXIMASTER
PORT M_AXI_RDATA = RDATA, DIR = I, VEC = [((C_NUM_MASTER_SLOTS*C_AXI_DATA_MAX_WIDTH)-1):0], CONTRIBUTION = C_AXI_DATA_MAX_WIDTH, BUS = AXIMASTER
PORT M_AXI_RRESP = RRESP, DIR = I, VEC = [((C_NUM_MASTER_SLOTS*2)-1):0], CONTRIBUTION = 2, BUS = AXIMASTER
PORT M_AXI_RLAST = RLAST, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_RVALID = RVALID, DIR = I, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER
PORT M_AXI_RREADY = RREADY, DIR = O, VEC = [(C_NUM_MASTER_SLOTS-1):0], BUS = AXIMASTER

END
