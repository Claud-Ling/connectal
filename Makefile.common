#################################################################################################

bozotarget:
	@echo "Makefile.common: please invoke with make gen.boardname"

## use "make gen.board" to generate the build directory
gen.%:
	make BOARD=$* gentarget prebuild

build.%: gen.%
	make -C $* BOARD=$* all

run.%:
	make -C $* BOARD=$* run

%.gdb:
	make XBSV_DEBUG=1 $*

ifeq ($(origin XBSVDIR),undefined)
XBSVDIR=$(shell cd ../..; /bin/pwd)
endif
ifeq ($(origin IPDIR),undefined)
IPDIR=$(XBSVDIR)/out
endif
ifndef NUMBER_OF_MASTERS
NUMBER_OF_MASTERS=1
endif

XBSVFLAGS += --bscflags " -D NumberOfMasters=$(NUMBER_OF_MASTERS)" --ipdir=$(IPDIR)

ifneq ($(NUMBER_OF_MASTERS), 0)
S2H += DmaConfig
H2S += DmaIndication
BSVFILES += $(XBSVDIR)/bsv/PortalMemory.bsv
CPPFILES += $(XBSVDIR)/cpp/dmaManager.c
endif

all bits verilog implementation android_exe bsim bsim_exe ubuntu_exe xsim xsimrun: gentarget prebuild
	make -C $(BOARD) $@

ifeq ($(origin TOP),undefined)
    ifeq ($(BOARD),bluesim)
    TOP=$(XBSVDIR)/bsv/BsimTop.bsv
    MKTOP=mkBsimTop
    XBSVFLAGS += -D BsimHostTypeIF
    endif
    ifeq ($(BOARD),ac701)
    TOP=$(XBSVDIR)/bsv/PcieTop.bsv
    MKTOP=mkPcieTop
    XBSVFLAGS += -D PcieHostTypeIF
    NEEDSPCIE=true
    endif
    ifeq ($(BOARD),kc705)
    TOP=$(XBSVDIR)/bsv/PcieTop.bsv
    MKTOP=mkPcieTop
    XBSVFLAGS += -D PcieHostTypeIF
    NEEDSPCIE=true
    endif
    ifeq ($(BOARD),vc707)
    TOP=$(XBSVDIR)/bsv/PcieTop.bsv
    MKTOP=mkPcieTop
    XBSVFLAGS += -D PcieHostTypeIF
    NEEDSPCIE=true
    endif
    ifeq ($(BOARD),v2000t)
    TOP=$(XBSVDIR)/bsv/PcieTop.bsv
    MKTOP=mkPcieTop
    XBSVFLAGS += -D PcieHostTypeIF
    NEEDSPCIE=true
    endif
    ifeq ($(BOARD),zedboard)
    TOP=$(XBSVDIR)/bsv/ZynqTop.bsv
    MKTOP=mkZynqTop
    XBSVFLAGS += -D ZynqHostTypeIF
    endif
    ifeq ($(BOARD),zc702)
    TOP=$(XBSVDIR)/bsv/ZynqTop.bsv
    MKTOP=mkZynqTop
    XBSVFLAGS += -D ZynqHostTypeIF
    endif
    ifeq ($(BOARD),zc706)
    TOP=$(XBSVDIR)/bsv/ZynqTop.bsv
    MKTOP=mkZynqTop
    XBSVFLAGS += -D ZynqHostTypeIF -D NUMBER_OF_LEDS=4
    endif
    ifeq ($(BOARD),zynq100)
    TOP=$(XBSVDIR)/bsv/ZynqTop.bsv
    MKTOP=mkZynqTop
    XBSVFLAGS += -D ZynqHostTypeIF
    endif
endif

ifeq ("$(NEEDSPCIE)","true")
    FPGAMAKE_XBSVFLAGS += -P mkPcieEndpointX7 -P mkPcieHost
    XBSVFLAGS += --xci=$(shell cd $(IPDIR); /bin/pwd)/$(BOARD)/pcie_7x_0/pcie_7x_0.xci
    XBSVFLAGS += --bscflags="+RTS -K46777216 -RTS"
endif

ifeq ($(USE_FPGAMAKE),true)
XBSVFLAGS += $(FPGAMAKE_XBSVFLAGS) --cache=$(XBSVDIR)/xbsv-cache
endif

XBSVFLAGS += $(EXTRA_XBSVFLAGS)

ifeq ($(USE_PRINTF),1)
PRINTF_EXTRA=$(BOARD)/generatedbsv/DisplayInd.bsv
else
PRINTF_EXTRA=$(XBSVDIR)/bsv/DisplayInd.bsv
endif

gentarget::
	@[ -e $(BOARD)/generatedbsv ] || mkdir -p $(BOARD)/generatedbsv
	@[ -e $(BOARD)/jni ] || mkdir -p $(BOARD)/jni
ifeq ($(USE_PRINTF),1)
	$(XBSVDIR)/scripts/preprocess_trace.py $(BOARD) $(BSVFILES)
endif
	$(XBSVDIR)/xbsvgen -B$(BOARD) -p $(BOARD) -x $(MKTOP) \
	$(foreach s2h, $(S2H), -s2h $(s2h)) \
	$(foreach h2s, $(H2S), -h2s $(h2s)) \
	$(foreach f, $(CPPFILES), -s $f) \
        -t $(TOP) $(XBSVFLAGS) $(BSVFILES) $(PRINTF_EXTRA)

prebuild::
	# additional steps needed before making verilog etc
ifeq ("$(NEEDSPCIE)","true")
	cd $(BOARD); vivado -mode batch -source $(shell cd $(XBSVDIR); /bin/pwd)/scripts/xbsv-synth-pcie.tcl
endif
